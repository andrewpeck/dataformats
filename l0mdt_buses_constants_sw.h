// -------------------------------------------------------------------------------------------------
// Auto-generated from:
// https://docs.google.com/spreadsheets/d/1oJh-NPv990n6AzXXZ7cBaySrltqBO-eGucrsnOx_r4s
// -------------------------------------------------------------------------------------------------
#ifndef L0MDT_BUSES_CONSTANTS_SW_H
#define L0MDT_BUSES_CONSTANTS_SW_H

const char df_hash[] = "7eb82b5b";

const int SW_LEN = 64; // Default bit width
const int SW_IW = 15; // Default integer bit width

// -------------------------------------------------------------------

// BCID from SLC
const int SLC_MUID_BCID_LEN = SW_LEN;
const int SLC_MUID_BCID_LSB = 0;
const int SLC_MUID_BCID_MSB = SLC_MUID_BCID_LSB + SW_LEN-1;
const int SLC_MUID_BCID_SCALE = 1;
const float SLC_MUID_BCID_SCALE_INV = 1;

// SL board ID (based on the fiber ID)
const int SLC_MUID_SLID_LEN = SW_LEN;
const int SLC_MUID_SLID_LSB = SLC_MUID_BCID_MSB + 1;
const int SLC_MUID_SLID_MSB = SLC_MUID_SLID_LSB + SW_LEN-1;

// SLc Identification (up to 3)
const int SLC_MUID_SLCID_LEN = SW_LEN;
const int SLC_MUID_SLCID_LSB = SLC_MUID_SLID_MSB + 1;
const int SLC_MUID_SLCID_MSB = SLC_MUID_SLCID_LSB + SW_LEN-1;

const int SLC_MUID_LEN = SLC_MUID_SLCID_LEN
		+ SLC_MUID_SLID_LEN
		+ SLC_MUID_BCID_LEN;

// -------------------------------------------------------------------

// SLc charge
const int SLC_COMMON_CHARGE_LEN = SW_LEN;
const int SLC_COMMON_CHARGE_LSB = 0;
const int SLC_COMMON_CHARGE_MSB = SLC_COMMON_CHARGE_LSB + SW_LEN-1;

// SLc highest pT threshold passed
const int SLC_COMMON_PTTHRESH_LEN = SW_LEN;
const int SLC_COMMON_PTTHRESH_LSB = SLC_COMMON_CHARGE_MSB + 1;
const int SLC_COMMON_PTTHRESH_MSB = SLC_COMMON_PTTHRESH_LSB + SW_LEN-1;
const int SLC_COMMON_PTTHRESH_SCALE = 1;
const float SLC_COMMON_PTTHRESH_SCALE_INV = 1;

// SLc Phi Position
const int SLC_COMMON_POSPHI_LEN = SW_LEN;
const int SLC_COMMON_POSPHI_LSB = SLC_COMMON_PTTHRESH_MSB + 1;
const int SLC_COMMON_POSPHI_MSB = SLC_COMMON_POSPHI_LSB + SW_LEN-1;
const int SLC_COMMON_POSPHI_SCALE = 1;
const float SLC_COMMON_POSPHI_SCALE_INV = 1;

// SLc Eta Position
const int SLC_COMMON_POSETA_LEN = SW_LEN;
const int SLC_COMMON_POSETA_LSB = SLC_COMMON_POSPHI_MSB + 1;
const int SLC_COMMON_POSETA_MSB = SLC_COMMON_POSETA_LSB + SW_LEN-1;
const int SLC_COMMON_POSETA_DECB = SW_LEN - SW_IW;
const int SLC_COMMON_POSETA_IW = SW_IW;

// TC sent to MDT TP
const int SLC_COMMON_TCSENT_LEN = SW_LEN;
const int SLC_COMMON_TCSENT_LSB = SLC_COMMON_POSETA_MSB + 1;
const int SLC_COMMON_TCSENT_MSB = SLC_COMMON_TCSENT_LSB + SW_LEN-1;

// SLc Identification (up to 3)
const int SLC_COMMON_SLCID_LEN = SW_LEN;
const int SLC_COMMON_SLCID_LSB = SLC_COMMON_TCSENT_MSB + 1;
const int SLC_COMMON_SLCID_MSB = SLC_COMMON_SLCID_LSB + SW_LEN-1;

const int SLC_COMMON_LEN = SLC_COMMON_SLCID_LEN
		+ SLC_COMMON_TCSENT_LEN
		+ SLC_COMMON_POSETA_LEN
		+ SLC_COMMON_POSPHI_LEN
		+ SLC_COMMON_PTTHRESH_LEN
		+ SLC_COMMON_CHARGE_LEN;

// -------------------------------------------------------------------

// NSW segment angle wrt Eta position
const int SLC_ENDCAP_NSWSEG_ANGDTHETA_LEN = SW_LEN;
const int SLC_ENDCAP_NSWSEG_ANGDTHETA_LSB = 0;
const int SLC_ENDCAP_NSWSEG_ANGDTHETA_MSB = SLC_ENDCAP_NSWSEG_ANGDTHETA_LSB + SW_LEN-1;

// NSW segment phi position
const int SLC_ENDCAP_NSWSEG_POSPHI_LEN = SW_LEN;
const int SLC_ENDCAP_NSWSEG_POSPHI_LSB = SLC_ENDCAP_NSWSEG_ANGDTHETA_MSB + 1;
const int SLC_ENDCAP_NSWSEG_POSPHI_MSB = SLC_ENDCAP_NSWSEG_POSPHI_LSB + SW_LEN-1;
const int SLC_ENDCAP_NSWSEG_POSPHI_SCALE = 1;
const float SLC_ENDCAP_NSWSEG_POSPHI_SCALE_INV = 1;

// NSW segment eta position
const int SLC_ENDCAP_NSWSEG_POSETA_LEN = SW_LEN;
const int SLC_ENDCAP_NSWSEG_POSETA_LSB = SLC_ENDCAP_NSWSEG_POSPHI_MSB + 1;
const int SLC_ENDCAP_NSWSEG_POSETA_MSB = SLC_ENDCAP_NSWSEG_POSETA_LSB + SW_LEN-1;
const int SLC_ENDCAP_NSWSEG_POSETA_DECB = SW_LEN - SW_IW;
const int SLC_ENDCAP_NSWSEG_POSETA_IW = SW_IW;

// SLc Segment Angle wrt Phi position
const int SLC_ENDCAP_SEG_ANGDPHI_LEN = SW_LEN;
const int SLC_ENDCAP_SEG_ANGDPHI_LSB = SLC_ENDCAP_NSWSEG_POSETA_MSB + 1;
const int SLC_ENDCAP_SEG_ANGDPHI_MSB = SLC_ENDCAP_SEG_ANGDPHI_LSB + SW_LEN-1;
const int SLC_ENDCAP_SEG_ANGDPHI_SCALE = 1;
const float SLC_ENDCAP_SEG_ANGDPHI_SCALE_INV = 1;

// SLc Segment Angle wrt Eta position
const int SLC_ENDCAP_SEG_ANGDTHETA_LEN = SW_LEN;
const int SLC_ENDCAP_SEG_ANGDTHETA_LSB = SLC_ENDCAP_SEG_ANGDPHI_MSB + 1;
const int SLC_ENDCAP_SEG_ANGDTHETA_MSB = SLC_ENDCAP_SEG_ANGDTHETA_LSB + SW_LEN-1;
const int SLC_ENDCAP_SEG_ANGDTHETA_SCALE = 1;
const float SLC_ENDCAP_SEG_ANGDTHETA_SCALE_INV = 1;

// (COPY - SLC_COMMON)
const int SLC_ENDCAP_SLC_COMMON_LEN = SLC_COMMON_LEN;
const int SLC_ENDCAP_SLC_COMMON_LSB = SLC_ENDCAP_SEG_ANGDTHETA_MSB + 1;
const int SLC_ENDCAP_SLC_COMMON_MSB = SLC_ENDCAP_SLC_COMMON_LSB + SLC_COMMON_LEN-1;

const int SLC_ENDCAP_LEN = SLC_ENDCAP_SLC_COMMON_LEN
		+ SLC_ENDCAP_SEG_ANGDTHETA_LEN
		+ SLC_ENDCAP_SEG_ANGDPHI_LEN
		+ SLC_ENDCAP_NSWSEG_POSETA_LEN
		+ SLC_ENDCAP_NSWSEG_POSPHI_LEN
		+ SLC_ENDCAP_NSWSEG_ANGDTHETA_LEN;

// -------------------------------------------------------------------

// SLc coincidence type
const int SLC_BARREL_COINTYPE_LEN = SW_LEN;
const int SLC_BARREL_COINTYPE_LSB = 0;
const int SLC_BARREL_COINTYPE_MSB = SLC_BARREL_COINTYPE_LSB + SW_LEN-1;

// SLc Hit Z Position in RPC3
const int SLC_BARREL_RPC3_POSZ_LEN = SW_LEN;
const int SLC_BARREL_RPC3_POSZ_LSB = SLC_BARREL_COINTYPE_MSB + 1;
const int SLC_BARREL_RPC3_POSZ_MSB = SLC_BARREL_RPC3_POSZ_LSB + SW_LEN-1;
const int SLC_BARREL_RPC3_POSZ_SCALE = 1;
const float SLC_BARREL_RPC3_POSZ_SCALE_INV = 1;

// SLc Hit Z Position in RPC2
const int SLC_BARREL_RPC2_POSZ_LEN = SW_LEN;
const int SLC_BARREL_RPC2_POSZ_LSB = SLC_BARREL_RPC3_POSZ_MSB + 1;
const int SLC_BARREL_RPC2_POSZ_MSB = SLC_BARREL_RPC2_POSZ_LSB + SW_LEN-1;
const int SLC_BARREL_RPC2_POSZ_SCALE = 1;
const float SLC_BARREL_RPC2_POSZ_SCALE_INV = 1;

// SLc Hit Z Position in RPC1
const int SLC_BARREL_RPC1_POSZ_LEN = SW_LEN;
const int SLC_BARREL_RPC1_POSZ_LSB = SLC_BARREL_RPC2_POSZ_MSB + 1;
const int SLC_BARREL_RPC1_POSZ_MSB = SLC_BARREL_RPC1_POSZ_LSB + SW_LEN-1;
const int SLC_BARREL_RPC1_POSZ_SCALE = 1;
const float SLC_BARREL_RPC1_POSZ_SCALE_INV = 1;

// SLc Hit Z Position in RPC0
const int SLC_BARREL_RPC0_POSZ_LEN = SW_LEN;
const int SLC_BARREL_RPC0_POSZ_LSB = SLC_BARREL_RPC1_POSZ_MSB + 1;
const int SLC_BARREL_RPC0_POSZ_MSB = SLC_BARREL_RPC0_POSZ_LSB + SW_LEN-1;
const int SLC_BARREL_RPC0_POSZ_SCALE = 1;
const float SLC_BARREL_RPC0_POSZ_SCALE_INV = 1;

// (COPY - SLC_COMMON)
const int SLC_BARREL_SLC_COMMON_LEN = SLC_COMMON_LEN;
const int SLC_BARREL_SLC_COMMON_LSB = SLC_BARREL_RPC0_POSZ_MSB + 1;
const int SLC_BARREL_SLC_COMMON_MSB = SLC_BARREL_SLC_COMMON_LSB + SLC_COMMON_LEN-1;

const int SLC_BARREL_LEN = SLC_BARREL_SLC_COMMON_LEN
		+ SLC_BARREL_RPC0_POSZ_LEN
		+ SLC_BARREL_RPC1_POSZ_LEN
		+ SLC_BARREL_RPC2_POSZ_LEN
		+ SLC_BARREL_RPC3_POSZ_LEN
		+ SLC_BARREL_COINTYPE_LEN;

// -------------------------------------------------------------------

// SLc Extra Vector MDT chamber ID
const int SLCPROC_PIPELINE_COMMON_EXT_VEC_MDTID_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_EXT_VEC_MDTID_LSB = 0;
const int SLCPROC_PIPELINE_COMMON_EXT_VEC_MDTID_MSB = SLCPROC_PIPELINE_COMMON_EXT_VEC_MDTID_LSB + SW_LEN-1;

// SLc Outer Vector MDT chamber ID
const int SLCPROC_PIPELINE_COMMON_OUT_VEC_MDTID_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_OUT_VEC_MDTID_LSB = SLCPROC_PIPELINE_COMMON_EXT_VEC_MDTID_MSB + 1;
const int SLCPROC_PIPELINE_COMMON_OUT_VEC_MDTID_MSB = SLCPROC_PIPELINE_COMMON_OUT_VEC_MDTID_LSB + SW_LEN-1;

// SLc Middle Vector MDT chamber ID
const int SLCPROC_PIPELINE_COMMON_MID_VEC_MDTID_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_MID_VEC_MDTID_LSB = SLCPROC_PIPELINE_COMMON_OUT_VEC_MDTID_MSB + 1;
const int SLCPROC_PIPELINE_COMMON_MID_VEC_MDTID_MSB = SLCPROC_PIPELINE_COMMON_MID_VEC_MDTID_LSB + SW_LEN-1;

// SLc Inner Vector MDT chamber ID
const int SLCPROC_PIPELINE_COMMON_INN_VEC_MDTID_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_INN_VEC_MDTID_LSB = SLCPROC_PIPELINE_COMMON_MID_VEC_MDTID_MSB + 1;
const int SLCPROC_PIPELINE_COMMON_INN_VEC_MDTID_MSB = SLCPROC_PIPELINE_COMMON_INN_VEC_MDTID_LSB + SW_LEN-1;

// SLc phimod
const int SLCPROC_PIPELINE_COMMON_PHIMOD_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_PHIMOD_LSB = SLCPROC_PIPELINE_COMMON_INN_VEC_MDTID_MSB + 1;
const int SLCPROC_PIPELINE_COMMON_PHIMOD_MSB = SLCPROC_PIPELINE_COMMON_PHIMOD_LSB + SW_LEN-1;
const int SLCPROC_PIPELINE_COMMON_PHIMOD_SCALE = 1;
const float SLCPROC_PIPELINE_COMMON_PHIMOD_SCALE_INV = 1;

// SLc board destination
const int SLCPROC_PIPELINE_COMMON_DESTSL_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_DESTSL_LSB = SLCPROC_PIPELINE_COMMON_PHIMOD_MSB + 1;
const int SLCPROC_PIPELINE_COMMON_DESTSL_MSB = SLCPROC_PIPELINE_COMMON_DESTSL_LSB + SW_LEN-1;

// SLc busy flag
const int SLCPROC_PIPELINE_COMMON_BUSY_LEN = SW_LEN;
const int SLCPROC_PIPELINE_COMMON_BUSY_LSB = SLCPROC_PIPELINE_COMMON_DESTSL_MSB + 1;
const int SLCPROC_PIPELINE_COMMON_BUSY_MSB = SLCPROC_PIPELINE_COMMON_BUSY_LSB + SW_LEN-1;

const int SLCPROC_PIPELINE_COMMON_LEN = SLCPROC_PIPELINE_COMMON_BUSY_LEN
		+ SLCPROC_PIPELINE_COMMON_DESTSL_LEN
		+ SLCPROC_PIPELINE_COMMON_PHIMOD_LEN
		+ SLCPROC_PIPELINE_COMMON_INN_VEC_MDTID_LEN
		+ SLCPROC_PIPELINE_COMMON_MID_VEC_MDTID_LEN
		+ SLCPROC_PIPELINE_COMMON_OUT_VEC_MDTID_LEN
		+ SLCPROC_PIPELINE_COMMON_EXT_VEC_MDTID_LEN;

// -------------------------------------------------------------------

// (COPY - SLC_MUID)
const int SLCPROC_PIPELINE_ENDCAP_SLC_MUID_LEN = SLC_MUID_LEN;
const int SLCPROC_PIPELINE_ENDCAP_SLC_MUID_LSB = 0;
const int SLCPROC_PIPELINE_ENDCAP_SLC_MUID_MSB = SLCPROC_PIPELINE_ENDCAP_SLC_MUID_LSB + SLC_MUID_LEN-1;

// (COPY - SLC_ENDCAP)
const int SLCPROC_PIPELINE_ENDCAP_SLC_ENDCAP_LEN = SLC_ENDCAP_LEN;
const int SLCPROC_PIPELINE_ENDCAP_SLC_ENDCAP_LSB = SLCPROC_PIPELINE_ENDCAP_SLC_MUID_MSB + 1;
const int SLCPROC_PIPELINE_ENDCAP_SLC_ENDCAP_MSB = SLCPROC_PIPELINE_ENDCAP_SLC_ENDCAP_LSB + SLC_ENDCAP_LEN-1;

// (COPY - SLCPROC_PIPELINE_COMMON)
const int SLCPROC_PIPELINE_ENDCAP_SLCPROC_PIPELINE_COMMON_LEN = SLCPROC_PIPELINE_COMMON_LEN;
const int SLCPROC_PIPELINE_ENDCAP_SLCPROC_PIPELINE_COMMON_LSB = SLCPROC_PIPELINE_ENDCAP_SLC_ENDCAP_MSB + 1;
const int SLCPROC_PIPELINE_ENDCAP_SLCPROC_PIPELINE_COMMON_MSB = SLCPROC_PIPELINE_ENDCAP_SLCPROC_PIPELINE_COMMON_LSB + SLCPROC_PIPELINE_COMMON_LEN-1;

const int SLCPROC_PIPELINE_ENDCAP_LEN = SLCPROC_PIPELINE_ENDCAP_SLCPROC_PIPELINE_COMMON_LEN
		+ SLCPROC_PIPELINE_ENDCAP_SLC_ENDCAP_LEN
		+ SLCPROC_PIPELINE_ENDCAP_SLC_MUID_LEN;

// -------------------------------------------------------------------

// (COPY - SLC_MUID)
const int SLCPROC_PIPELINE_BARREL_SLC_MUID_LEN = SLC_MUID_LEN;
const int SLCPROC_PIPELINE_BARREL_SLC_MUID_LSB = 0;
const int SLCPROC_PIPELINE_BARREL_SLC_MUID_MSB = SLCPROC_PIPELINE_BARREL_SLC_MUID_LSB + SLC_MUID_LEN-1;

// (COPY - SLC_BARREL)
const int SLCPROC_PIPELINE_BARREL_SLC_BARREL_LEN = SLC_BARREL_LEN;
const int SLCPROC_PIPELINE_BARREL_SLC_BARREL_LSB = SLCPROC_PIPELINE_BARREL_SLC_MUID_MSB + 1;
const int SLCPROC_PIPELINE_BARREL_SLC_BARREL_MSB = SLCPROC_PIPELINE_BARREL_SLC_BARREL_LSB + SLC_BARREL_LEN-1;

// (COPY - SLCPROC_PIPELINE_COMMON)
const int SLCPROC_PIPELINE_BARREL_SLCPROC_PIPELINE_COMMON_LEN = SLCPROC_PIPELINE_COMMON_LEN;
const int SLCPROC_PIPELINE_BARREL_SLCPROC_PIPELINE_COMMON_LSB = SLCPROC_PIPELINE_BARREL_SLC_BARREL_MSB + 1;
const int SLCPROC_PIPELINE_BARREL_SLCPROC_PIPELINE_COMMON_MSB = SLCPROC_PIPELINE_BARREL_SLCPROC_PIPELINE_COMMON_LSB + SLCPROC_PIPELINE_COMMON_LEN-1;

const int SLCPROC_PIPELINE_BARREL_LEN = SLCPROC_PIPELINE_BARREL_SLCPROC_PIPELINE_COMMON_LEN
		+ SLCPROC_PIPELINE_BARREL_SLC_BARREL_LEN
		+ SLCPROC_PIPELINE_BARREL_SLC_MUID_LEN;

// -------------------------------------------------------------------

// Pulse width
const int TDC_PULSEWIDTH_LEN = SW_LEN;
const int TDC_PULSEWIDTH_LSB = 0;
const int TDC_PULSEWIDTH_MSB = TDC_PULSEWIDTH_LSB + SW_LEN-1;
const int TDC_PULSEWIDTH_DECB = SW_LEN - SW_IW;
const int TDC_PULSEWIDTH_IW = SW_IW;

// TDC fine time with BCID
const int TDC_FINETIME_LEN = SW_LEN;
const int TDC_FINETIME_LSB = TDC_PULSEWIDTH_MSB + 1;
const int TDC_FINETIME_MSB = TDC_FINETIME_LSB + SW_LEN-1;
const int TDC_FINETIME_DECB = SW_LEN - SW_IW;
const int TDC_FINETIME_IW = SW_IW;

// TDC BCID
const int TDC_COARSETIME_LEN = SW_LEN;
const int TDC_COARSETIME_LSB = TDC_FINETIME_MSB + 1;
const int TDC_COARSETIME_MSB = TDC_COARSETIME_LSB + SW_LEN-1;
const int TDC_COARSETIME_SCALE = 1;
const float TDC_COARSETIME_SCALE_INV = 1;

// Edge or pair mode
const int TDC_EDGEMODE_LEN = SW_LEN;
const int TDC_EDGEMODE_LSB = TDC_COARSETIME_MSB + 1;
const int TDC_EDGEMODE_MSB = TDC_EDGEMODE_LSB + SW_LEN-1;

// Channel number within TDC
const int TDC_CHANID_LEN = SW_LEN;
const int TDC_CHANID_LSB = TDC_EDGEMODE_MSB + 1;
const int TDC_CHANID_MSB = TDC_CHANID_LSB + SW_LEN-1;

const int TDC_LEN = TDC_CHANID_LEN
		+ TDC_EDGEMODE_LEN
		+ TDC_COARSETIME_LEN
		+ TDC_FINETIME_LEN
		+ TDC_PULSEWIDTH_LEN;

// -------------------------------------------------------------------

// Valid bit
const int TDCPOLMUX_DATAVALID_LEN = SW_LEN;
const int TDCPOLMUX_DATAVALID_LSB = 0;
const int TDCPOLMUX_DATAVALID_MSB = TDCPOLMUX_DATAVALID_LSB + SW_LEN-1;

// Elink ID within fiber
const int TDCPOLMUX_ELINKID_LEN = SW_LEN;
const int TDCPOLMUX_ELINKID_LSB = TDCPOLMUX_DATAVALID_MSB + 1;
const int TDCPOLMUX_ELINKID_MSB = TDCPOLMUX_ELINKID_LSB + SW_LEN-1;

// Fiber ID within board
const int TDCPOLMUX_FIBERID_LEN = SW_LEN;
const int TDCPOLMUX_FIBERID_LSB = TDCPOLMUX_ELINKID_MSB + 1;
const int TDCPOLMUX_FIBERID_MSB = TDCPOLMUX_FIBERID_LSB + SW_LEN-1;

// (COPY - TDC)
const int TDCPOLMUX_TDC_LEN = TDC_LEN;
const int TDCPOLMUX_TDC_LSB = TDCPOLMUX_FIBERID_MSB + 1;
const int TDCPOLMUX_TDC_MSB = TDCPOLMUX_TDC_LSB + TDC_LEN-1;

const int TDCPOLMUX_LEN = TDCPOLMUX_TDC_LEN
		+ TDCPOLMUX_FIBERID_LEN
		+ TDCPOLMUX_ELINKID_LEN
		+ TDCPOLMUX_DATAVALID_LEN;

// -------------------------------------------------------------------

// SLc inner vector theta angle
const int SLCPROC_HPS_VEC_ANG_LEN = SW_LEN;
const int SLCPROC_HPS_VEC_ANG_LSB = 0;
const int SLCPROC_HPS_VEC_ANG_MSB = SLCPROC_HPS_VEC_ANG_LSB + SW_LEN-1;
const int SLCPROC_HPS_VEC_ANG_SCALE = 1;
const float SLCPROC_HPS_VEC_ANG_SCALE_INV = 1;

// SLc inner vector rho position
const int SLCPROC_HPS_VEC_POS_LEN = SW_LEN;
const int SLCPROC_HPS_VEC_POS_LSB = SLCPROC_HPS_VEC_ANG_MSB + 1;
const int SLCPROC_HPS_VEC_POS_MSB = SLCPROC_HPS_VEC_POS_LSB + SW_LEN-1;
const int SLCPROC_HPS_VEC_POS_SCALE = 1;
const float SLCPROC_HPS_VEC_POS_SCALE_INV = 1;

// SLc Inner Vector MDT chamber ID
const int SLCPROC_HPS_VEC_MDTID_LEN = SW_LEN;
const int SLCPROC_HPS_VEC_MDTID_LSB = SLCPROC_HPS_VEC_POS_MSB + 1;
const int SLCPROC_HPS_VEC_MDTID_MSB = SLCPROC_HPS_VEC_MDTID_LSB + SW_LEN-1;

// inner MDT segment chip destination
const int SLCPROC_HPS_MDTSEG_DEST_LEN = SW_LEN;
const int SLCPROC_HPS_MDTSEG_DEST_LSB = SLCPROC_HPS_VEC_MDTID_MSB + 1;
const int SLCPROC_HPS_MDTSEG_DEST_MSB = SLCPROC_HPS_MDTSEG_DEST_LSB + SW_LEN-1;

// SLc Muon Unique Identifier
const int SLCPROC_HPS_SLC_MUID_LEN = SLC_MUID_LEN;
const int SLCPROC_HPS_SLC_MUID_LSB = SLCPROC_HPS_MDTSEG_DEST_MSB + 1;
const int SLCPROC_HPS_SLC_MUID_MSB = SLCPROC_HPS_SLC_MUID_LSB + SLC_MUID_LEN-1;

// SLC Valid bit
const int SLCPROC_HPS_SLC_VALID_LEN = SW_LEN;
const int SLCPROC_HPS_SLC_VALID_LSB = SLCPROC_HPS_SLC_MUID_MSB + 1;
const int SLCPROC_HPS_SLC_VALID_MSB = SLCPROC_HPS_SLC_VALID_LSB + SW_LEN-1;

const int SLCPROC_HPS_LEN = SLCPROC_HPS_SLC_VALID_LEN
		+ SLCPROC_HPS_SLC_MUID_LEN
		+ SLCPROC_HPS_MDTSEG_DEST_LEN
		+ SLCPROC_HPS_VEC_MDTID_LEN
		+ SLCPROC_HPS_VEC_POS_LEN
		+ SLCPROC_HPS_VEC_ANG_LEN;

// -------------------------------------------------------------------

// Tube (uncalibrated) time
const int TAR_MDT_TUBE_TIME_LEN = SW_LEN;
const int TAR_MDT_TUBE_TIME_LSB = 0;
const int TAR_MDT_TUBE_TIME_MSB = TAR_MDT_TUBE_TIME_LSB + SW_LEN-1;
const int TAR_MDT_TUBE_TIME_DECB = SW_LEN - SW_IW;
const int TAR_MDT_TUBE_TIME_IW = SW_IW;

// Tube position along z
const int TAR_MDT_TUBE_Z_LEN = SW_LEN;
const int TAR_MDT_TUBE_Z_LSB = TAR_MDT_TUBE_TIME_MSB + 1;
const int TAR_MDT_TUBE_Z_MSB = TAR_MDT_TUBE_Z_LSB + SW_LEN-1;
const int TAR_MDT_TUBE_Z_DECB = SW_LEN - SW_IW;
const int TAR_MDT_TUBE_Z_IW = SW_IW;

// Tube radial position
const int TAR_MDT_TUBE_RHO_LEN = SW_LEN;
const int TAR_MDT_TUBE_RHO_LSB = TAR_MDT_TUBE_Z_MSB + 1;
const int TAR_MDT_TUBE_RHO_MSB = TAR_MDT_TUBE_RHO_LSB + SW_LEN-1;
const int TAR_MDT_TUBE_RHO_DECB = SW_LEN - SW_IW;
const int TAR_MDT_TUBE_RHO_IW = SW_IW;

// Tube number within one station
const int TAR_MDT_TUBE_NUM_LEN = SW_LEN;
const int TAR_MDT_TUBE_NUM_LSB = TAR_MDT_TUBE_RHO_MSB + 1;
const int TAR_MDT_TUBE_NUM_MSB = TAR_MDT_TUBE_NUM_LSB + SW_LEN-1;

// Tube layer within one station
const int TAR_MDT_TUBE_LAYER_LEN = SW_LEN;
const int TAR_MDT_TUBE_LAYER_LSB = TAR_MDT_TUBE_NUM_MSB + 1;
const int TAR_MDT_TUBE_LAYER_MSB = TAR_MDT_TUBE_LAYER_LSB + SW_LEN-1;

const int TAR_LEN = TAR_MDT_TUBE_LAYER_LEN
		+ TAR_MDT_TUBE_NUM_LEN
		+ TAR_MDT_TUBE_RHO_LEN
		+ TAR_MDT_TUBE_Z_LEN
		+ TAR_MDT_TUBE_TIME_LEN;

// -------------------------------------------------------------------

// Tube drift radius
const int HPS_LSF_MDT_RADIUS_LEN = SW_LEN;
const int HPS_LSF_MDT_RADIUS_LSB = 0;
const int HPS_LSF_MDT_RADIUS_MSB = HPS_LSF_MDT_RADIUS_LSB + SW_LEN-1;
const int HPS_LSF_MDT_RADIUS_DECB = SW_LEN - SW_IW;
const int HPS_LSF_MDT_RADIUS_IW = SW_IW;

// Tube local position along second coord
const int HPS_LSF_MDT_LOCALY_LEN = SW_LEN;
const int HPS_LSF_MDT_LOCALY_LSB = HPS_LSF_MDT_RADIUS_MSB + 1;
const int HPS_LSF_MDT_LOCALY_MSB = HPS_LSF_MDT_LOCALY_LSB + SW_LEN-1;
const int HPS_LSF_MDT_LOCALY_DECB = SW_LEN - SW_IW;
const int HPS_LSF_MDT_LOCALY_IW = SW_IW;

// Tube local position along precision coord
const int HPS_LSF_MDT_LOCALX_LEN = SW_LEN;
const int HPS_LSF_MDT_LOCALX_LSB = HPS_LSF_MDT_LOCALY_MSB + 1;
const int HPS_LSF_MDT_LOCALX_MSB = HPS_LSF_MDT_LOCALX_LSB + SW_LEN-1;
const int HPS_LSF_MDT_LOCALX_DECB = SW_LEN - SW_IW;
const int HPS_LSF_MDT_LOCALX_IW = SW_IW;

// Data Valid bit
const int HPS_LSF_DATA_VALID_LEN = SW_LEN;
const int HPS_LSF_DATA_VALID_LSB = HPS_LSF_MDT_LOCALX_MSB + 1;
const int HPS_LSF_DATA_VALID_MSB = HPS_LSF_DATA_VALID_LSB + SW_LEN-1;

const int HPS_LSF_LEN = HPS_LSF_DATA_VALID_LEN
		+ HPS_LSF_MDT_LOCALX_LEN
		+ HPS_LSF_MDT_LOCALY_LEN
		+ HPS_LSF_MDT_RADIUS_LEN;

// -------------------------------------------------------------------

// Tube drift radius
const int HPS_CSF_MDT_RADIUS_LEN = SW_LEN;
const int HPS_CSF_MDT_RADIUS_LSB = 0;
const int HPS_CSF_MDT_RADIUS_MSB = HPS_CSF_MDT_RADIUS_LSB + SW_LEN-1;
const int HPS_CSF_MDT_RADIUS_DECB = SW_LEN - SW_IW;
const int HPS_CSF_MDT_RADIUS_IW = SW_IW;

// Tube local position along second coord
const int HPS_CSF_MDT_LOCALY_LEN = SW_LEN;
const int HPS_CSF_MDT_LOCALY_LSB = HPS_CSF_MDT_RADIUS_MSB + 1;
const int HPS_CSF_MDT_LOCALY_MSB = HPS_CSF_MDT_LOCALY_LSB + SW_LEN-1;
const int HPS_CSF_MDT_LOCALY_DECB = SW_LEN - SW_IW;
const int HPS_CSF_MDT_LOCALY_IW = SW_IW;

// Tube local position along precision coord
const int HPS_CSF_MDT_LOCALX_LEN = SW_LEN;
const int HPS_CSF_MDT_LOCALX_LSB = HPS_CSF_MDT_LOCALY_MSB + 1;
const int HPS_CSF_MDT_LOCALX_MSB = HPS_CSF_MDT_LOCALX_LSB + SW_LEN-1;
const int HPS_CSF_MDT_LOCALX_DECB = SW_LEN - SW_IW;
const int HPS_CSF_MDT_LOCALX_IW = SW_IW;

// Data Valid bit
const int HPS_CSF_DATA_VALID_LEN = SW_LEN;
const int HPS_CSF_DATA_VALID_LSB = HPS_CSF_MDT_LOCALX_MSB + 1;
const int HPS_CSF_DATA_VALID_MSB = HPS_CSF_DATA_VALID_LSB + SW_LEN-1;

const int HPS_CSF_LEN = HPS_CSF_DATA_VALID_LEN
		+ HPS_CSF_MDT_LOCALX_LEN
		+ HPS_CSF_MDT_LOCALY_LEN
		+ HPS_CSF_MDT_RADIUS_LEN;

// -------------------------------------------------------------------

// (COPY - var)
const int SLCPIPE_PTCALC_CHARGE_LEN = SW_LEN;
const int SLCPIPE_PTCALC_CHARGE_LSB = 0;
const int SLCPIPE_PTCALC_CHARGE_MSB = SLCPIPE_PTCALC_CHARGE_LSB + SW_LEN-1;

// (COPY - var)
const int SLCPIPE_PTCALC_PHIMOD_LEN = SW_LEN;
const int SLCPIPE_PTCALC_PHIMOD_LSB = SLCPIPE_PTCALC_CHARGE_MSB + 1;
const int SLCPIPE_PTCALC_PHIMOD_MSB = SLCPIPE_PTCALC_PHIMOD_LSB + SW_LEN-1;
const int SLCPIPE_PTCALC_PHIMOD_SCALE = 1;
const float SLCPIPE_PTCALC_PHIMOD_SCALE_INV = 1;

// (COPY - SLC_MUID)
const int SLCPIPE_PTCALC_SLC_MUID_LEN = SLC_MUID_LEN;
const int SLCPIPE_PTCALC_SLC_MUID_LSB = SLCPIPE_PTCALC_PHIMOD_MSB + 1;
const int SLCPIPE_PTCALC_SLC_MUID_MSB = SLCPIPE_PTCALC_SLC_MUID_LSB + SLC_MUID_LEN-1;

const int SLCPIPE_PTCALC_LEN = SLCPIPE_PTCALC_SLC_MUID_LEN
		+ SLCPIPE_PTCALC_PHIMOD_LEN
		+ SLCPIPE_PTCALC_CHARGE_LEN;

// -------------------------------------------------------------------

// SF MDT segment qualiry
const int SF_SEGQUALITY_LEN = SW_LEN;
const int SF_SEGQUALITY_LSB = 0;
const int SF_SEGQUALITY_MSB = SF_SEGQUALITY_LSB + SW_LEN-1;

// SF MDT segment angle along the precision coord
const int SF_SEGANGLE_LEN = SW_LEN;
const int SF_SEGANGLE_LSB = SF_SEGQUALITY_MSB + 1;
const int SF_SEGANGLE_MSB = SF_SEGANGLE_LSB + SW_LEN-1;

// SF MDT segment position along the precision coord
const int SF_SEGPOS_LEN = SW_LEN;
const int SF_SEGPOS_LSB = SF_SEGANGLE_MSB + 1;
const int SF_SEGPOS_MSB = SF_SEGPOS_LSB + SW_LEN-1;
const int SF_SEGPOS_DECB = SW_LEN - SW_IW;
const int SF_SEGPOS_IW = SW_IW;

// SF MDT segment valid bit
const int SF_SEGVALID_LEN = SW_LEN;
const int SF_SEGVALID_LSB = SF_SEGPOS_MSB + 1;
const int SF_SEGVALID_MSB = SF_SEGVALID_LSB + SW_LEN-1;

// (COPY - var)
const int SF_VEC_MDTID_LEN = SW_LEN;
const int SF_VEC_MDTID_LSB = SF_SEGVALID_MSB + 1;
const int SF_VEC_MDTID_MSB = SF_VEC_MDTID_LSB + SW_LEN-1;

// (COPY - SLC_MUID)
const int SF_SLC_MUID_LEN = SLC_MUID_LEN;
const int SF_SLC_MUID_LSB = SF_VEC_MDTID_MSB + 1;
const int SF_SLC_MUID_MSB = SF_SLC_MUID_LSB + SLC_MUID_LEN-1;

const int SF_LEN = SF_SLC_MUID_LEN
		+ SF_VEC_MDTID_LEN
		+ SF_SEGVALID_LEN
		+ SF_SEGPOS_LEN
		+ SF_SEGANGLE_LEN
		+ SF_SEGQUALITY_LEN;

// -------------------------------------------------------------------

// quality of the MDT TC (TBC how this is defined)
const int PTCALC_QUALITY_LEN = SW_LEN;
const int PTCALC_QUALITY_LSB = 0;
const int PTCALC_QUALITY_MSB = PTCALC_QUALITY_LSB + SW_LEN-1;

// # of segments used for calculating the pT
const int PTCALC_NSEGMENTS_LEN = SW_LEN;
const int PTCALC_NSEGMENTS_LSB = PTCALC_QUALITY_MSB + 1;
const int PTCALC_NSEGMENTS_MSB = PTCALC_NSEGMENTS_LSB + SW_LEN-1;

// charge determined from the pT calc
const int PTCALC_CHARGE_LEN = SW_LEN;
const int PTCALC_CHARGE_LSB = PTCALC_NSEGMENTS_MSB + 1;
const int PTCALC_CHARGE_MSB = PTCALC_CHARGE_LSB + SW_LEN-1;

// pT threshold satisfied by the MDT TC
const int PTCALC_PTTHRESH_LEN = SW_LEN;
const int PTCALC_PTTHRESH_LSB = PTCALC_CHARGE_MSB + 1;
const int PTCALC_PTTHRESH_MSB = PTCALC_PTTHRESH_LSB + SW_LEN-1;
const int PTCALC_PTTHRESH_SCALE = 1;
const float PTCALC_PTTHRESH_SCALE_INV = 1;

// pT calculated by the pT Calc
const int PTCALC_PT_LEN = SW_LEN;
const int PTCALC_PT_LSB = PTCALC_PTTHRESH_MSB + 1;
const int PTCALC_PT_MSB = PTCALC_PT_LSB + SW_LEN-1;
const int PTCALC_PT_DECB = SW_LEN - SW_IW;
const int PTCALC_PT_IW = SW_IW;

// eta of the innermost MDT station segment position
const int PTCALC_ETA_LEN = SW_LEN;
const int PTCALC_ETA_LSB = PTCALC_PT_MSB + 1;
const int PTCALC_ETA_MSB = PTCALC_ETA_LSB + SW_LEN-1;
const int PTCALC_ETA_DECB = SW_LEN - SW_IW;
const int PTCALC_ETA_IW = SW_IW;

// (COPY - SLC_MUID)
const int PTCALC_SLC_MUID_LEN = SLC_MUID_LEN;
const int PTCALC_SLC_MUID_LSB = PTCALC_ETA_MSB + 1;
const int PTCALC_SLC_MUID_MSB = PTCALC_SLC_MUID_LSB + SLC_MUID_LEN-1;

const int PTCALC_LEN = PTCALC_SLC_MUID_LEN
		+ PTCALC_ETA_LEN
		+ PTCALC_PT_LEN
		+ PTCALC_PTTHRESH_LEN
		+ PTCALC_CHARGE_LEN
		+ PTCALC_NSEGMENTS_LEN
		+ PTCALC_QUALITY_LEN;

// -------------------------------------------------------------------

// (COPY - var)
const int SLCPIPE_MTC_ENDCAP_DESTSL_LEN = SW_LEN;
const int SLCPIPE_MTC_ENDCAP_DESTSL_LSB = 0;
const int SLCPIPE_MTC_ENDCAP_DESTSL_MSB = SLCPIPE_MTC_ENDCAP_DESTSL_LSB + SW_LEN-1;

// (COPY - var)
const int SLCPIPE_MTC_ENDCAP_BUSY_LEN = SW_LEN;
const int SLCPIPE_MTC_ENDCAP_BUSY_LSB = SLCPIPE_MTC_ENDCAP_DESTSL_MSB + 1;
const int SLCPIPE_MTC_ENDCAP_BUSY_MSB = SLCPIPE_MTC_ENDCAP_BUSY_LSB + SW_LEN-1;

// (COPY - SLCPROC_PIPELINE_ENDCAP)
const int SLCPIPE_MTC_ENDCAP_SLC_COMMON_LEN = SLC_COMMON_LEN;
const int SLCPIPE_MTC_ENDCAP_SLC_COMMON_LSB = SLCPIPE_MTC_ENDCAP_BUSY_MSB + 1;
const int SLCPIPE_MTC_ENDCAP_SLC_COMMON_MSB = SLCPIPE_MTC_ENDCAP_SLC_COMMON_LSB + SLC_COMMON_LEN-1;

// (COPY - SLC_MUID)
const int SLCPIPE_MTC_ENDCAP_SLC_MUID_LEN = SLC_MUID_LEN;
const int SLCPIPE_MTC_ENDCAP_SLC_MUID_LSB = SLCPIPE_MTC_ENDCAP_SLC_COMMON_MSB + 1;
const int SLCPIPE_MTC_ENDCAP_SLC_MUID_MSB = SLCPIPE_MTC_ENDCAP_SLC_MUID_LSB + SLC_MUID_LEN-1;

const int SLCPIPE_MTC_ENDCAP_LEN = SLCPIPE_MTC_ENDCAP_SLC_MUID_LEN
		+ SLCPIPE_MTC_ENDCAP_SLC_COMMON_LEN
		+ SLCPIPE_MTC_ENDCAP_BUSY_LEN
		+ SLCPIPE_MTC_ENDCAP_DESTSL_LEN;

// -------------------------------------------------------------------

// (COPY - var)
const int SLCPIPE_MTC_BARREL_DESTSL_LEN = SW_LEN;
const int SLCPIPE_MTC_BARREL_DESTSL_LSB = 0;
const int SLCPIPE_MTC_BARREL_DESTSL_MSB = SLCPIPE_MTC_BARREL_DESTSL_LSB + SW_LEN-1;

// (COPY - var)
const int SLCPIPE_MTC_BARREL_BUSY_LEN = SW_LEN;
const int SLCPIPE_MTC_BARREL_BUSY_LSB = SLCPIPE_MTC_BARREL_DESTSL_MSB + 1;
const int SLCPIPE_MTC_BARREL_BUSY_MSB = SLCPIPE_MTC_BARREL_BUSY_LSB + SW_LEN-1;

// (COPY - SLCPROC_PIPELINE_BARREL)
const int SLCPIPE_MTC_BARREL_SLC_COMMON_LEN = SLC_COMMON_LEN;
const int SLCPIPE_MTC_BARREL_SLC_COMMON_LSB = SLCPIPE_MTC_BARREL_BUSY_MSB + 1;
const int SLCPIPE_MTC_BARREL_SLC_COMMON_MSB = SLCPIPE_MTC_BARREL_SLC_COMMON_LSB + SLC_COMMON_LEN-1;

// (COPY - SLC_MUID)
const int SLCPIPE_MTC_BARREL_SLC_MUID_LEN = SLC_MUID_LEN;
const int SLCPIPE_MTC_BARREL_SLC_MUID_LSB = SLCPIPE_MTC_BARREL_SLC_COMMON_MSB + 1;
const int SLCPIPE_MTC_BARREL_SLC_MUID_MSB = SLCPIPE_MTC_BARREL_SLC_MUID_LSB + SLC_MUID_LEN-1;

// (COPY - var)
const int SLCPIPE_MTC_BARREL_COINTYPE_LEN = SW_LEN;
const int SLCPIPE_MTC_BARREL_COINTYPE_LSB = SLCPIPE_MTC_BARREL_SLC_MUID_MSB + 1;
const int SLCPIPE_MTC_BARREL_COINTYPE_MSB = SLCPIPE_MTC_BARREL_COINTYPE_LSB + SW_LEN-1;

const int SLCPIPE_MTC_BARREL_LEN = SLCPIPE_MTC_BARREL_COINTYPE_LEN
		+ SLCPIPE_MTC_BARREL_SLC_MUID_LEN
		+ SLCPIPE_MTC_BARREL_SLC_COMMON_LEN
		+ SLCPIPE_MTC_BARREL_BUSY_LEN
		+ SLCPIPE_MTC_BARREL_DESTSL_LEN;

// -------------------------------------------------------------------

// (COPY - var)
const int MTC_QUALITY_LEN = SW_LEN;
const int MTC_QUALITY_LSB = 0;
const int MTC_QUALITY_MSB = MTC_QUALITY_LSB + SW_LEN-1;

// (COPY - var)
const int MTC_NSEGMENTS_LEN = SW_LEN;
const int MTC_NSEGMENTS_LSB = MTC_QUALITY_MSB + 1;
const int MTC_NSEGMENTS_MSB = MTC_NSEGMENTS_LSB + SW_LEN-1;

// MDT processing flags
const int MTC_PROCFLAGS_LEN = SW_LEN;
const int MTC_PROCFLAGS_LSB = MTC_NSEGMENTS_MSB + 1;
const int MTC_PROCFLAGS_MSB = MTC_PROCFLAGS_LSB + SW_LEN-1;

// (COPY - var)
const int MTC_CHARGE_LEN = SW_LEN;
const int MTC_CHARGE_LSB = MTC_PROCFLAGS_MSB + 1;
const int MTC_CHARGE_MSB = MTC_CHARGE_LSB + SW_LEN-1;

// (COPY - var)
const int MTC_PTTHRESH_LEN = SW_LEN;
const int MTC_PTTHRESH_LSB = MTC_CHARGE_MSB + 1;
const int MTC_PTTHRESH_MSB = MTC_PTTHRESH_LSB + SW_LEN-1;
const int MTC_PTTHRESH_SCALE = 1;
const float MTC_PTTHRESH_SCALE_INV = 1;

// (COPY - var)
const int MTC_PT_LEN = SW_LEN;
const int MTC_PT_LSB = MTC_PTTHRESH_MSB + 1;
const int MTC_PT_MSB = MTC_PT_LSB + SW_LEN-1;
const int MTC_PT_DECB = SW_LEN - SW_IW;
const int MTC_PT_IW = SW_IW;

// (COPY - var)
const int MTC_ETA_LEN = SW_LEN;
const int MTC_ETA_LSB = MTC_PT_MSB + 1;
const int MTC_ETA_MSB = MTC_ETA_LSB + SW_LEN-1;
const int MTC_ETA_DECB = SW_LEN - SW_IW;
const int MTC_ETA_IW = SW_IW;

// (COPY - SLC_COMMON)
const int MTC_SLC_COMMON_LEN = SLC_COMMON_LEN;
const int MTC_SLC_COMMON_LSB = MTC_ETA_MSB + 1;
const int MTC_SLC_COMMON_MSB = MTC_SLC_COMMON_LSB + SLC_COMMON_LEN-1;

const int MTC_LEN = MTC_SLC_COMMON_LEN
		+ MTC_ETA_LEN
		+ MTC_PT_LEN
		+ MTC_PTTHRESH_LEN
		+ MTC_CHARGE_LEN
		+ MTC_PROCFLAGS_LEN
		+ MTC_NSEGMENTS_LEN
		+ MTC_QUALITY_LEN;


// -------------------------------------------------------------------

#endif // L0MDT_BUSES_CONSTANTS_SW_H
